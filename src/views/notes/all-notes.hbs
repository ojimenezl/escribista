<style>
  /* titulo de la pagina */
  #divtituloPag {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 24vh;
    /* Ajusta esta altura según tus necesidades */
    margin-top: -70px;
    margin-bottom: -30px
  }

  #contornoTitle {
    background-color: #121212;
    padding: 20px;
    border: 2px solid #3ace3a;
    /* Puedes ajustar el ancho y color del borde según prefieras */
    border-radius: 10px;
    /* Ajusta el valor para cambiar la curvatura del borde */
    color: white;
  }

  #tituloPag {
    color: white;
    /* Agregamos esta línea para cambiar el color del texto a blanco */
    margin: 0;
    /* Eliminamos el margen predeterminado del h3 para que quede centrado verticalmente */
  }

  /* Estilo para el título truncado */
  .trunc-title {
    display: block;
    width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  /* Estilo para la descripción truncada */
  .trunc-description {
    display: block;
    width: 100%;
    height: 60px;
    /* Establece la altura máxima deseada para la descripción */
    overflow: hidden;
    text-overflow: ellipsis;
  }

  /* Clase para el div más grande */
  .big-div {
    background-color: black;
    color: white;
  }

  /* Clase para cambiar el color del icono a blanco */
  .white-icon {
    color: white;
  }

  /* Clase para el botón "Register" */
  .green-button {
    /*background-color: #3ace3a; */
    background-color: #000000;
    */
    /* Verde fosforescente */
    color: black;
    /* Puedes cambiar esto si deseas un color de texto diferente */
  }

  .black-button {
    background-color: #000000;
    /* Verde fosforescente */
    color: white;
    /* Puedes cambiar esto si deseas un color de texto diferente */
  }

  .red-button {
    background-color: #000000;
    /* Verde fosforescente */
    color: red;
    /* Puedes cambiar esto si deseas un color de texto diferente */
  }

  /* Agregamos una nueva clase para cambiar el color del corazón */
  .red-heart {
    color: red;
  }

  /*Venata opaca */
  /* Estilo para la ventana */
  .button-container-buttons {
    position: relative;
    width: 100%;
    /* Ajusta el ancho según prefieras para que quepan los tres botones */
    z-index: 2;
    /* Asegura que la ventana esté por encima de los botones */
  }

  .button-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, .20);
    backdrop-filter: blur(2px);
    /* Fondo transparente */
    border-radius: 5px;
    /* Ajusta el radio para los bordes */
    transition: transform 0.3s ease-out;
    /* Transición para el efecto de deslizamiento */
    z-index: 1;
    /* Valor menor que el contenedor para estar por debajo de él */
    pointer-events: none;
    /* Evita que la ventana interfiera con los botones */
  }

  /* Estilo para los botones dentro de la ventana */
  .button-container-buttons form {
    position: relative;
    /* Coloca los botones encima de la ventana */
  }

  /* Estilo para la animación de deslizamiento */
  .button-container-buttons:hover .button-overlay {
    transform: translateY(110%);
  }
</style>

<div id="divtituloPag">
  <div id="contornoTitle">
    <h3 id="tituloPag">Todos los libros</h3>
  </div>
</div>

<div class="row">
  <div class="button-container mb-4">
    <form action="/notes/add">
      <button type="submit" class="btn btn-light btn-block btn-sm black-button">Nuevo</button>
    </form>
  </div>

  {{#each notes}}

  <div class="col-md-3">
    <div class="card big-div">
      <div class="card-body">
        <h4 class="card-title d-flex justify-content-between align-items-center">
          <span class="trunc-title">{{ title }} </span>
        {{#ifEqualsOr user creador condicion_cap}}
          <a href="/notes/edit/{{_id}}">
          <i class="fas fa-edit white-icon"></i></a>
        {{/ifEqualsOr}}

        </h4>
        <p class="trunc-description">{{{ description }}}</p>

        <div class="button-container-buttons d-inline-block">
          <div class="button-overlay"></div>
          <!-- DELETE REQUEST -->
          {{#ifEqualsOr user creador condicion_cap}}
          <div class="button-container d-inline-block mx-2">
            <form action="/notes/paginas/{{_id}}">
              <button type="submit" class="btn btn-success btn-block btn-sm green-button"><i
                  class="fas fa-book"></i></button>
            </form>
          </div>
          {{else}}
          <div class="button-container d-inline-block mx-2">
            <label for="">Proximamente</label>
          </div>
          {{/ifEqualsOr}}
          <!-- Likes -->
          <div class="button-container d-inline-block mx-2">
            <button type="button"
              class="btn btn-danger btn-block btn-sm {{#if liked}}red-button{{else}}black-button{{/if}}"
              data-note-id="{{_id}}">
              <i class="fas fa-heart white-icon {{#if liked}}red-heart{{/if}}"></i> {{ likeTotal }}
            </button>
          </div>
          <!-- Pago -->
          <div class="button-container d-inline-block mx-2">
            <button type="button">
              <i></i> {{ precio }}
            </button>
          </div>
          <div class="button-container d-inline-block mx-2">
          {{#if precio}}
          <form action="/notes/checkout/{{_id}}" method="POST">
            <button type="submit" class="btn btn-sm btn-warning">
              Comprar por €{{ precio }}
            </button>
          </form>
          {{else}}
          <button class="btn btn-sm btn-secondary" disabled>Gratis</button>
          {{/if}}
        </div>

          {{#ifEquals user creador}}

          <div class="button-container d-inline-block mx-2">
            <form action="/notes/delete/{{_id}}?_method=DELETE" method="POST">
              <input type="hidden" name="_method" value="DELETE">
              <button type="submit" class="btn btn-danger btn-block btn-sm black-button"><i
                  class="fas fa-trash-alt"></i></button>
            </form>
          </div>
          {{/ifEquals}}
        </div>
      </div>
    </div>
  </div>
  {{else}}
  <div class="card mx-auto">
    <div class="card-body">
      <h1>Hola {{user.name}}</h1>
      <p clsss="lead">Tienes alguna historia que contar?, que empiece la aventura.</p>
      <a href="/notes/add" class="btn btn-success btn-block">Crea una Historia!</a>
    </div>
  </div>
  {{/each}}
</div>

<script>
  // Obtén todos los botones de like
  const likeButtons = document.querySelectorAll('.btn-danger');

  // Agregar un evento clic a cada botón de like
  likeButtons.forEach(likeButton => {
    likeButton.addEventListener('click', async () => {
      const noteId = likeButton.getAttribute('data-note-id');

      try {
        const response = await fetch(`/notes/like/${noteId}`, {
          method: 'POST',
          // Puedes agregar encabezados si es necesario
        });

        if (response.ok) {
          const data = await response.json();
          const likes = data.likes;
          let dislikes = data.dislike

          if (dislikes) {
            likeButton.style.color = 'white';
            likeButton.innerHTML = `
          <i class="fas fa-heart white-icon"></i> ${likes.length}
        `;
          } else {
            likeButton.style.color = 'red';
            likeButton.innerHTML = `
          <i class="fas fa-heart white-icon red-heart"></i> ${likes.length}
        `;
          }
          // Actualizar el botón de like y la cantidad de likes en la interfaz

        } else {
          console.error('Error al dar like');
        }
      } catch (error) {
        console.error('Error de red:', error);
      }
    });
  });

</script>